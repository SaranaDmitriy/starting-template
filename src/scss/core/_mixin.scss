@import "variables";

@mixin flex-row($justify-content: center, $align-items: center) {
  display: flex;
  flex-wrap: wrap;
  align-items: $align-items;
  justify-content: $justify-content;
}

@mixin flex-column($justify-content: center, $align-items: center) {
  display: flex;
  flex-direction: column;
  align-items: $align-items;
  justify-content: $justify-content;
}

@mixin respond-to($breakpoint) {
  /* sm */
  @if map-has-key($breakpoints, $breakpoint) {
    @media (max-width: #{map-get($breakpoints, $breakpoint)}) {
      @content;
    }
  } @else {
    @warn "Error";
  }
}

@mixin z-index($type) {
  @if map-has-key($z-indexs, $type) {
    z-index: #{map-get($z-indexs, $type)};
    @content;
  } @else {
    @warn "Error, " + #{$type} + " is undefined";
  }
}

// TEST

// .test {
// 	@include respond-to(sm) {
// 		color: green;
// 	}
// }

// .flex-row {
// 	@include flex-row(space-between, flex-start);
// }

// .flex-column {
// 	@include flex-column(flex-end, center);
// }

// .test {
// 	@include z-index(popup);
// }
